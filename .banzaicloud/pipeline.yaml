pipeline:

  package_zookeeper:
    image: lachlanevenson/k8s-helm:latest
    commands:
      - helm init -c
      - helm package ./.banzaicloud/charts/zookeeper

  deploy_zk:
    image: banzaicloud/ci-pipeline-client:0.10
    action: EnsureDeployment
    deployment:
      name: './zookeeper-0.0.1.tgz'
      releaseName: '{{ .CICD_REPO_NAME }}-zk'
      namespace: zookeeper
  
  package_kafka_operator:
    image: lachlanevenson/k8s-helm:latest
    commands:
      - helm init -c
      - helm package ./.banzaicloud/charts/kafka-operator

  deploy_kafka_operator:
    image: banzaicloud/ci-pipeline-client:0.10
    action: EnsureDeployment
    deployment:
      name: './kafka-operator-0.2.0.tgz'
      releaseName: '{{ .CICD_REPO_NAME }}-kafka-operator'
      namespace: kafka

{{{{- if (not (eq .pipeline.deploy_kafka.deployment.values.brokers.ssl.mechanism "None")) }}}}
  install_ssl_secrets:
    image: banzaicloud/ci-pipeline-client:0.10
    action: InstallSecret
    clusterSecret:
      name: '{{ .CICD_REPO_NAME }}-ssl'
      namespace: kafka
      merge: true
      spec:
  install_sasl_secrets:
    image: banzaicloud/ci-pipeline-client:0.10
    action: InstallSecret
    clusterSecret:
      name: '{{ .CICD_REPO_NAME }}-sasl'
      namespace: kafka
      merge: true
      spec:
{{{{- end}}}}
  package_kafka:
    image: lachlanevenson/k8s-helm:latest
    commands:
      - helm init -c
      - helm package ./.banzaicloud/charts/spotguide-kafka

  deploy_kafka:
    image: banzaicloud/ci-pipeline-client:0.10
    action: EnsureDeployment
    deployment:
      name: './spotguide-kafka-1.0.1.tgz'
      releaseName: '{{ .CICD_REPO_NAME }}'
      namespace: kafka
      values:
        brokers:
          ssl:
{{{{- if (not (eq .pipeline.deploy_kafka.deployment.values.brokers.ssl.mechanism "None")) }}}}
            secretName: '{{ .CICD_REPO_NAME }}-ssl'
{{{{- end}}}}
          sasl:
{{{{- if (not (eq .pipeline.deploy_kafka.deployment.values.brokers.ssl.mechanism "None")) }}}}
            secretName: '{{ .CICD_REPO_NAME }}-sasl'
{{{{- end}}}}
{{{{- if .pipeline.deploy_kafkahq.deployment.values.banzaicloud.ui.enabled }}}}
  install_kafkahq_auth_secrets:
    image: banzaicloud/ci-pipeline-client:0.10
    action: InstallSecret
    clusterSecret:
      name: '{{ .CICD_REPO_NAME }}-kafkahq'
      namespace: kafka
      merge: true
      spec:
        - name: htpasswd
          source: htpasswd

  package_kafkahq:
    image: lachlanevenson/k8s-helm:latest
    commands:
        - helm init -c
        - helm package ./.banzaicloud/charts/kafkahq

  deploy_kafkahq:
    image: banzaicloud/ci-pipeline-client:0.10
    action: EnsureDeployment
    deployment:
      name: './kafkahq-0.1.0.tgz'
      releaseName: '{{ .CICD_REPO_NAME }}-kafkahq'
      namespace: kafka
      values:
        ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: traefik
            traefik.frontend.rule.type: PathPrefixStrip
            traefik.ingress.kubernetes.io/auth-type: basic
            traefik.ingress.kubernetes.io/auth-secret: '{{ .CICD_REPO_NAME }}-kafkahq'
            ingress.kubernetes.io/ssl-redirect: 'true'
          hosts:
            - 'kafkahq-{{ (printf "%s-%s" .CICD_REPO_NAME .CLUSTER_NAME) | sha1sum | trunc 10}}.{{.ORG_NAME}}.{{.DOMAIN_NAME}}'

{{{{- if or (eq (.pipeline.deploy_kafka.deployment.values.brokers.ssl.mechanism) "Internal") (eq (.pipeline.deploy_kafka.deployment.values.brokers.ssl.mechanism) "Internal/External") }}}}
        tlsSecretName: '{{ .CICD_REPO_NAME }}-ssl'
{{{{- end}}}}
{{{{- end}}}}